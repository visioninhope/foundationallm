<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ assembly name="System.Text.Json" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ assembly name="System.Memory" #>
<#@ import namespace="System.Text.Json" #>
<#@ import namespace="System.Text.Json.Nodes" #>
<#@ output extension=".cs" #>
<#
    string inputFileName = this.Host.ResolvePath($"../Data/AuthorizationAppConfiguration.json");
    string inputContent = File.ReadAllText(inputFileName);
    var jsonObjects = JsonNode.Parse(inputContent)!;

    Func<JsonNode, string> getName = n => n.GetValue<string>().Replace(":", "_");

    Func<JsonNode, string> getValue = n => string.IsNullOrWhiteSpace(n["secret"].GetValue<string>())
        ? n["value"].GetValue<string>()
        : $"{{\\\"uri\\\":\\\"${{env:AZURE_KEY_VAULT_ENDPOINT}}secrets/foundationallm-{n["secret"].GetValue<string>()}}}\\\"}}";
#>
namespace FoundationaLLM.Common.Constants.Configuration
{
    /// <summary>
    /// Defines all Azure Key vault secret names referred by the Azure App Configuration keys.
    /// </summary>
    public static partial class AuthorizationKeyVaultSecretNames
    {<#
    foreach (var jsonObject in jsonObjects.AsArray())
    {
        foreach (var key in jsonObject["configuration_keys"].AsArray())
        {
            if (!string.IsNullOrWhiteSpace(key["secret"].GetValue<string>()))
            {
#>

        /// <summary>
        /// <#=key["description"].GetValue<string>()#>
        /// </summary>
        public const string FoundationaLLM_<#=getName(jsonObject["namespace"])#>_<#=getName(key["name"])#> =
            "foundationallm-<#=key["secret"].GetValue<string>()#>";
<#
            }
        }
    }
#>
    }
}
