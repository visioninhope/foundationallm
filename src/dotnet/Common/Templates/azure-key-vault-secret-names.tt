<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ assembly name="System.Text.Json" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ assembly name="System.Memory" #>
<#@ import namespace="System.Text.Json" #>
<#@ import namespace="System.Text.Json.Nodes" #>
<#@ output extension=".json" #>
<#
    string inputFileName = this.Host.ResolvePath($"../Constants/Data/AppConfiguration.json");
    string inputContent = File.ReadAllText(inputFileName);
    var jsonObjects = JsonNode.Parse(inputContent)!;

    Func<JsonNode, string> getContentType = n => string.IsNullOrWhiteSpace(n["secret"].GetValue<string>())
        ? n["content_type"].GetValue<string>()
        : "application/vnd.microsoft.appconfig.keyvaultref+json;charset=utf-8";

    Func<JsonNode, string> getValue = n => string.IsNullOrWhiteSpace(n["secret"].GetValue<string>())
        ? n["value"].GetValue<string>()
        : $"{{\\\"uri\\\":\\\"${{env:AZURE_KEY_VAULT_ENDPOINT}}secrets/foundationallm-{n["secret"].GetValue<string>()}}}\\\"}}";

    var items =
        jsonObjects.AsArray()
        .Select(ns =>
            ns["configuration_keys"].AsArray()
            .Where(k => !string.IsNullOrWhiteSpace(k["secret"].GetValue<string>()))
            .Select(k => new {
                KeyValue = $"\"FoundationaLLM:{(ns["namespace"])}:{(k["name"])}\": \"foundationallm-{(k["secret"].GetValue<string>())}\"",
            }))
        .SelectMany(x => x)
        .ToList();
#>
{
<#
    for (int i = 0; i < items.Count; i++)
    {
#>
    <#=items[i].KeyValue#><#=i == items.Count - 1 ? string.Empty : ","#>
<#
    }
#>
}
